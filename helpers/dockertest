#!/bin/bash

set -x
set -e

# test the github distribution in a container

# build the base container

docker build -t objiotest-base - <<EOF
FROM ubuntu:19.10
ENV LC_ALL=C
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get -qqy update
RUN apt-get install -qqy git
RUN apt-get install -qqy python3
RUN apt-get install -qqy python3-pip
RUN apt-get install -qqy python3-venv
RUN apt-get install -qqy curl
EOF

case $1 in

git)

# run the test as a second stage build without caching

docker build -t objiotest --no-cache - <<EOF
FROM objiotest-base
ENV SHELL=/bin/bash
RUN git clone https://git@github.com/tmbdev/objio.git /tmp/objio
WORKDIR /tmp/objio
RUN python3 -m venv venv
RUN . venv/bin/activate; pip install --no-cache-dir pytest
RUN . venv/bin/activate; pip install --no-cache-dir -r requirements.txt
RUN . venv/bin/activate; python3 -m pytest
EOF

;;

pip)

docker build -t objiotest --no-cache - <<EOF
FROM objiotest-base
ENV SHELL=/bin/bash

RUN pip3 install objio
RUN pip3 install pytest

# we clone this just to get the tests

RUN git clone https://git@github.com/tmbdev/objio.git /tmp/objio
WORKDIR /tmp/objio

# we need to run the tests in the current directory
# but we want to make sure that we are using the globally
# installed libraries, so we move the subdirectory out of the way

RUN mv objio use-installed-objio

# note that for commands, this will test ./command, not /usr/local/bin/command

RUN python3 -m pytest
EOF

;;

*)
echo "usage: $0 [git|pip]"
;;

esac
